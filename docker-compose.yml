version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: cedarlume-postgres
    environment:
      POSTGRES_DB: cedarlume
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgbouncer for connection pooling
  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: cedarlume-pgbouncer
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_USER: postgres
      DATABASES_PASSWORD: postgres
      DATABASES_DBNAME: cedarlume
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 20
    ports:
      - "6432:6432"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "psql -h localhost -p 6432 -U postgres -d cedarlume -c 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: cedarlume-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API service
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: cedarlume-api
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@pgbouncer:6432/cedarlume?pgbouncer=true
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      JWT_EXPIRES_IN: 15m
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: http://localhost:3000/auth/google/callback
      APPLE_CLIENT_ID: ${APPLE_CLIENT_ID}
      APPLE_TEAM_ID: ${APPLE_TEAM_ID}
      APPLE_KEY_ID: ${APPLE_KEY_ID}
      APPLE_PRIVATE_KEY: ${APPLE_PRIVATE_KEY}
      APPLE_CALLBACK_URL: http://localhost:3000/auth/apple/callback
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      FRONTEND_URL: http://localhost:8081
      CORS_ORIGINS: http://localhost:3000,http://localhost:8081
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      pgbouncer:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    command: npm run start:dev

  # Mobile development server (Expo)
  mobile:
    build:
      context: .
      dockerfile: apps/mobile/Dockerfile
    container_name: cedarlume-mobile
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      API_URL: http://localhost:3000
    ports:
      - "8081:8081"
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    volumes:
      - ./apps/mobile:/app
      - /app/node_modules
    command: npm start

  # Admin web interface
  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
    container_name: cedarlume-admin
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
    ports:
      - "3001:3000"
    depends_on:
      - api
    volumes:
      - ./apps/admin:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: cedarlume-network
